{"version":3,"sources":["index.js"],"names":["App","_React$useState","React","useState","_React$useState2","Object","_Users_pushpaksharma_Ass_assignment_guess_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inputValueOne","setInputValueOne","_React$useState3","_React$useState4","result","setResult","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onClick","Math","floor","random","type","onChange","e","target","value","parseInt","rootElement","document","getElementById","ReactDOM","render","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"uMAMA,SAASA,IAEP,IAAAC,EAA0CC,IAAMC,SAAS,GAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAApDM,EAAaH,EAAA,GAAEI,EAAgBJ,EAAA,GACtCK,EAA4BP,IAAMC,SAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAvCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAKxB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAQ,wDAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBC,QAAS,kBAAML,EAAUM,KAAKC,MAAmB,GAAbD,KAAKE,UAXnC,KAYNC,KAAK,UAAS,SACdR,EAAAC,EAAAC,cAAA,SACAC,UAAU,cACVM,SAAU,SAACC,GAAC,OAAKf,EAAiBe,EAAEC,OAAOC,QAC3CA,MAAOlB,EACPc,KAAK,UAIW,IAAjBd,GAAuBM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAChCU,SAASnB,IAAkBmB,SAASf,GAAU,eAAiB,0BAO1E,IAAMgB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACTlB,EAAAC,EAAAC,cAACiB,EAAA,WAAU,KACTnB,EAAAC,EAAAC,cAACf,EAAG,OACS2B","file":"static/js/main.c5db2679.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StrictMode } from 'react';\n\nimport \"./styles.css\";\n\nfunction App() {\n\n  const [inputValueOne, setInputValueOne] = React.useState(0);\n  const [result, setResult] = React.useState(\"\");\n\n  const min = 20;\n  const max = 31;\n\n  return (\n    <div className=\"App\">\n\n      <p className=\"title\">Guess the number between 20 - 30  by (Pushpak - 591)</p>\n\n\n      <div className=\"numbers\">\n        <button className=\"buttonStyle\" \n        onClick={() => setResult(Math.floor(Math.random() * (max - min)) + min)}\n        type=\"button\">Guess</button>\n        <input \n        className=\"buttonStyle\" \n        onChange={(e) => setInputValueOne(e.target.value)}\n        value={inputValueOne}\n        type=\"text\">\n        </input>\n      </div>\n\n      {inputValueOne != \"\" && <p className=\"result\">\n          {parseInt(inputValueOne) == parseInt(result) ? \"lovely Guess\" : \"Sorry!! You missed it\"}\n      </p>}\n\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n<StrictMode>\n  <App />\n</StrictMode>, rootElement);\n"],"sourceRoot":""}